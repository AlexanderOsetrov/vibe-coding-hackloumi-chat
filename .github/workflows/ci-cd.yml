name: CI/CD Pipeline

on:
  push:
    branches: [ master, M10/infrastructure-and-deployment ]

env:
  NODE_ENV: ${{ vars.NODE_ENV }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  VPC_ID: ${{ secrets.VPC_ID }}
  SUBNET_IDS: ${{ secrets.SUBNET_IDS }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
  AWS_REGION: ${{ vars.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  HUSKY: 0  # Disable husky in CI/CD environment

jobs:
  deploy-ecr:
    name: Deploy ECR Repository
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Infrastructure Tools
        uses: ./.github/actions/setup-infrastructure-tools
      
      - name: Deploy ECR Repository
        run: make deploy-ecr-aws

  build-and-push-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: deploy-ecr
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Setup Infrastructure Tools
        uses: ./.github/actions/setup-infrastructure-tools
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set default.region $AWS_REGION
          if [ ! -z "$AWS_SESSION_TOKEN" ]; then
            aws configure set aws_session_token $AWS_SESSION_TOKEN
          fi
      
      - name: Build Docker Image
        run: make build-aws
      
      - name: Push Docker Image
        run: make push-aws

  deploy-application:
    name: Deploy Application Infrastructure
    runs-on: ubuntu-latest
    needs: build-and-push-image
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Infrastructure Tools
        uses: ./.github/actions/setup-infrastructure-tools
      
      - name: Deploy Application Infrastructure
        run: make deploy-app-aws
      
      - name: Deployment Success
        run: |
          echo "ðŸŽ‰ Hackloumi Chat successfully deployed to AWS!"
          echo "âœ… ECR repository deployed"
          echo "âœ… Docker image built and pushed"
          echo "âœ… Application infrastructure deployed" 